var a,
	previous,
	aSource,
	aTitle,
	autoplay,
	totalTracks,
	previousTrackNum,
	ext,
	loop,
	currentTimeInfo,
	plause,
	playlistControl,
	progressBar,
	stop,
	songTitle,
	timeLoaded,
	timePlayed,
	totalTime,
	tracksSection,
	playing =! 1,
	trackSelector,
	volumeControl,
	lt,
	trackNum = 0,
	vol = 1,
	maxlength = 65;
	

$(function(){
	a = new Audio;
	a.preload = "metadata";
	a.autoplay = "false";
	extBrowser();
	currentTimeInfo=$("#currentTime");
	plause=$("#plause");
	playlistControl=$("#playlistControl");
	progressBar=$("#progressBar");
	stop=$("#stop");
	songTitle=$("#songTitle");
	timeLoaded=$("#timeLoaded");
	timePlayed=$("#timePlayed");
	totalTime=$("#totalTime");
	tracksSection=$("#tracks");
	trackSelector=$(".track");
	volumeControl=$(":range");
	loop=$("#player").attr("data-loop");
	totalTracks=$(".track").size();
	a.addEventListener("timeupdate",updateTime);
	a.addEventListener("ended",endSong);
	a.addEventListener("progress",loadingTime);
	a.addEventListener("loadedmetadata",metadata);
	a.addEventListener("error",error);
	renameTracksItems();
	aSource=$(".track").eq(trackNum).attr("data-source");
	a.volume=vol;
	volumeControl.val(vol);
	volumeControl.rangeinput();
	
	
	plause.click(function(){
		playing?(a.pause(),
				playing =! 1,
				plause.css("background","url(images/play.png)"))

				:0==autoplay?beforePlay():
					(a.play(),
					playing=!0,
					plause.css("background","url(images/pause2.png)"))
	});
	
	stop.click(function(){
		a.pause();
		a.currentTime=0;
		playing=!1;
		a.removeEventListener("canplay",letsPlay);
		timePlayed.css("width","0%");
		plause.css("background","url(images/play.png)")
	});

	$(":range").change(function(b,c){
		vol=a.volume=c}
	);

	trackSelector.click(function(){
		aSource=$(this).attr("data-source");
		var b=trackSelector.index(this);
		if(previous === aSource && !1==playing || previous !== aSource)
			previousTrackNum=trackNum,trackNum=b,beforePlay()
	});

	var b=progressBar.position(),c=b.top-progressBar.height()+10,d=b.left,e=progressBar.width(),g=currentTimeInfo.width();
	progressBar.on({click:function(b){b=(b.pageX-d)*a.duration/e;
	if(b<=lt.end(0)&&playing)a.currentTime=b},mousemove:function(b){var f=(b.pageX-d)*a.duration/e;
	currentTimeInfo.css({display:"block",top:c+"px",left:b.pageX-g/2+"px"});
	currentTimeInfo.text(formatTime(f))},mouseout:function(){currentTimeInfo.css("display","none")}});
	playlistControl.click(function(){"block"===tracksSection.css("display")?(tracksSection.slideUp("fast"),$(this).html("&#x25BC;")):(tracksSection.slideDown("fast"),$(this).html("&#x25B2;"))})});
	function renameTracksItems(){$(".track span").each(function(){var b=$(this).text();
	b.length>maxlength&&(b=b.substring(0,maxlength),$(this).text(b+" ..."))})}function metadata(){var b=formatTime(a.duration);
	totalTime.text(b)}

function beforePlay() {
	playing && (a.pause(),playing=!1,plause.css("background","url(images/play.png"),timeLoaded.css("width","0%"),timePlayed.css("width","0%"));
	aTitle=trackSelector.eq(trackNum).text();
	songTitle.text("Loading...");
	trackSelector.eq(previousTrackNum).removeClass("trackPlaying");
	trackSelector.eq(trackNum).addClass("trackPlaying");
	a.src=aSource+ext;
	a.load();
	a.addEventListener("canplay",letsPlay)}

function letsPlay() {
	songTitle.text(aTitle);
	a.play();
	previous=aSource;
	playing=!0;
	plause.css("background","url(images/pause2.png)")}function updateTime(){var b=a.duration,c=a.currentTime;
	timePlayed.css("width",100*c/b+"%");
	c=formatTime(c);
	$("#played").text(c);
	if( lt.end(0) < b&&!$.browser.opera)
		lt=a.buffered,loadingTime()}

function endSong(){
	a.pause();
	playing=!1;
	a.removeEventListener("canplay",letsPlay);
	timePlayed.css("width","0%");
	timeLoaded.css("width","0%");
	plause.css("background","url(images/play.png)");
	previousTrackNum=trackNum;
	trackNum==totalTracks-1&&1==loop?(trackNum<totalTracks-1?trackNum++:trackNum=0,aSource=trackSelector.eq(trackNum).attr("data-source"),beforePlay()):trackNum<totalTracks-1&&(trackNum++,aSource=trackSelector.eq(trackNum).attr("data-source"),beforePlay())}

function loadingTime(){
	lt=a.buffered;
	var b=100*lt.end(0)/a.duration;
	timeLoaded.css("width",b+"%")}function formatTime(b){var c=Math.floor(b%60),b=Math.floor(b/60);
	10>c&&(c="0"+c);
	10>b&&(b="0"+b);
	return b+":"+c}function error(){4==a.error.code?errorString="Codec Error":songTitle.text("Error Loading Files: "+errorString)}function extBrowser(){if($.browser.webkit||$.browser.msie)ext=".mp3";
	else if($.browser.mozilla||$.browser.opera)ext=".ogg"};
	